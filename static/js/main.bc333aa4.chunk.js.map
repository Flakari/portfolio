{"version":3,"sources":["components/Header/Navigation/Navigation.js","components/Header/Header.js","components/Home/Home.js","components/About/About.js","components/Projects/ProjectTile/ProjectTile.js","components/Projects/Projects.js","components/Contact/Contact.js","components/App.js","serviceWorker.js","index.js"],"names":["Navigation","props","useState","String","document","URL","match","currentPage","setCurrentPage","changeHighlight","value","className","show","to","onClick","click","Header","window","innerWidth","windowWidth","setWindowWidth","showNav","setShowNav","addEventListener","clickHandler","id","aria-label","src","alt","Home","About","ProjectTile","prop","project","style","background","image","backgroundSize","backgroundPosition","title","description","href","site","target","rel","github","projectDetails","Projects","color","marginBottom","map","item","key","Contact","download","App","exact","path","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc333aa4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = (props) => {\r\n    const [currentPage, setCurrentPage] = useState(String(document.URL.match(/\\w+?$/)));\r\n\r\n    const changeHighlight = value => {\r\n        setCurrentPage(value);\r\n    }\r\n\r\n    return (\r\n        <nav className={props.show ? 'visible' : null}>\r\n            <ul>\r\n                <Link to=\"/\">\r\n                    <li \r\n                        className={currentPage === 'null' ? 'highlight' : null} \r\n                        onClick={() => {changeHighlight('null'); props.click();}}\r\n                    >\r\n                        Home\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/about\">\r\n                    <li \r\n                        className={currentPage === 'about' ? 'highlight' : null} \r\n                        onClick={() => {changeHighlight('about'); props.click();}}>\r\n                        About\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/projects\">\r\n                    <li \r\n                        className={currentPage === 'projects' ? 'highlight' : null} \r\n                        onClick={() => {changeHighlight('projects'); props.click();}}>\r\n                        Projects\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/contact\">\r\n                    <li \r\n                        className={currentPage === 'contact' ? 'highlight' : null} \r\n                        onClick={() => {changeHighlight('contact'); props.click();}}>\r\n                        Contact\r\n                    </li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport Navigation from './Navigation/Navigation';\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    const [showNav, setShowNav] = useState(false);\r\n\r\n    window.addEventListener('resize', () => {\r\n        setWindowWidth(window.innerWidth);\r\n    });\r\n\r\n    const clickHandler = () => {\r\n        setShowNav(() => {\r\n            if (windowWidth <= 700) {\r\n                return !showNav;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <button id=\"header-hamburger\" onClick={clickHandler} aria-label=\"Toggle Navigation\"><img src=\"images/Hamburger_icon.svg\" alt=\"\"></img></button>\r\n                <p>Nathan Dimock</p>\r\n                {windowWidth > 700 ? <Navigation show={showNav} click={clickHandler} /> : null}\r\n            </header>\r\n            {windowWidth <= 700 ? <Navigation show={showNav} click={clickHandler} /> : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Home.scss';\r\n\r\nconst Home = () => (\r\n    <>\r\n        <div id=\"background\"></div>\r\n        <div id=\"home-container\">\r\n            <div>\r\n                <h2 id=\"intro\">Hi there, I'm</h2>\r\n                <h1>Nathan Dimock</h1>\r\n                <h2 id=\"title\">Front-end Web Developer</h2>\r\n            </div> \t\t\t\r\n        </div>\r\n    </>\r\n);\r\n\r\nexport default Home;","import React from 'react';\r\nimport './About.scss';\r\n\r\nconst About = () => {\r\n    return (\r\n        <main id=\"about\">\r\n            <h1>{'<About />'}</h1>\r\n            <p>I'm a front-end JavaScript web developer with experience creating websites using vanilla JavaScript and JavaScript frameworks like React. I have an art background which is why the front end appeals to me so much. I've found great enjoyment in figuring out problems, whether how to get a layout to work on various devices, or how to program the underlying logic that makes the website functional to the user.</p>\r\n            <section id=\"about-lists\">\r\n                <div>\r\n                    <h2>Technologies</h2>\r\n                    <ul id=\"technologies\">\r\n                        <li><img src=\"/images/javascript.svg\" alt=\"\"></img>JavaScript</li>\r\n                        <li><img src=\"/images/react-2.svg\" alt=\"\"></img>React</li>\r\n                        <li><img src=\"/images/react-router.svg\" alt=\"\"></img>React Router</li> \r\n                        <li><img src=\"images/html-5.svg\" alt=\"\"></img>HTML5</li>\r\n                        <li><img src=\"images/css-5.svg\" alt=\"\"></img>CSS3</li>\r\n                        <li><img src=\"/images/sass-1.svg\" alt=\"\"></img>SASS</li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <h2>Tools</h2>\r\n                    <ul id=\"tools\">    \r\n                        <li><img src=\"images/github-logo.svg\" alt=\"\"></img>Github</li>\r\n                        <li><img src=\"images/Visual_Studio_Code_1.35_icon.svg\" alt=\"\"></img>Visual Studio Code</li>\r\n                        <li><img src=\"images/Codepen-logo.png\" alt=\"\"></img>Codepen</li>\r\n                        <li><img src=\"images/Figma-logo.svg\" alt=\"\"></img>Figma</li>\r\n                    </ul>\r\n                </div>\r\n            </section>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport './ProjectTile.scss';\r\n\r\nconst ProjectTile = (props) => {\r\n    const prop = props.project;\r\n    const style = {\r\n        background: `linear-gradient(rgba(0, 184, 255, 0.8), rgba(0, 137, 190, 0.9)), url('/images/${prop.image}')`, backgroundSize: 'cover',\r\n        backgroundPosition: '0% 0%, 0% 85%'\r\n    }\r\n    return (\r\n        <div style={style} className=\"project-tile\">\r\n            {/* <img src={`/images/${prop.image}`} alt={`${prop.title} Project`}/> */}\r\n            <div>\r\n                <h2>{prop.title}</h2>\r\n                <p>{prop.description}</p>\r\n                <div className=\"button-container\">\r\n                    <a href={prop.site} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <button className=\"site-button\"><img src={'images/globe.png'} alt='View Site' /></button>\r\n                    </a>\r\n                    <a href={prop.github} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <button className=\"github-button\"><img src={'images/Github Logo.png'} alt='View Github' /></button>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProjectTile;","import React from 'react';\r\nimport ProjectTile from './ProjectTile/ProjectTile';\r\nimport './Projects.scss';\r\n\r\nconst projectDetails = [\r\n    {\r\n        title: 'Weather!',\r\n        description: 'Weather app made using React, uses data collected from OpenWeatherMap API',\r\n        site: 'https://flakari.github.io/weather-app',\r\n        github: 'https://github.com/Flakari/weather-app',\r\n        image: 'Weather App.png'\r\n    },\r\n    {\r\n        title: 'Game of Life',\r\n        description: 'British Mathematician John Conway\\'s game of Life made using React',\r\n        site: 'https://flakari.github.io/game-of-life',\r\n        github: 'https://github.com/Flakari/game-of-life',\r\n        image: 'Game of Life.png'\r\n    },\r\n    {\r\n        title: 'Pomodoro Clock',\r\n        description: 'Vanilla JavaScript pomodoro clock, keeps track of user\\'s time worked',\r\n        site: 'https://flakari.github.io/pomodoro-clock',\r\n        github: 'https://github.com/Flakari/pomodoro-clock',\r\n        image: 'Pomodoro Clock.png'\r\n    },\r\n    {\r\n        title: 'Library',\r\n        description: 'CRUD library app, keeps track of books read through local storage',\r\n        site: 'https://flakari.github.io/js-library',\r\n        github: 'https://github.com/Flakari/js-library',\r\n        image: 'Library.png'\r\n    }\r\n];\r\n\r\nconst Projects = () => { return (\r\n        <main id=\"projects\">\r\n            <h1 style={{color: 'black'}}>{'<Projects />'}</h1>\r\n            <p style={{marginBottom: '30px'}}>Personal projects I have worked on to improve my skills and gain experience in the front-end space</p>\r\n            <div id=\"projects-container\">\r\n                {projectDetails.map(item => <ProjectTile key={item.title} project={item} />)}\r\n            </div>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './Contact.scss';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <main id=\"contact-container\">\r\n            <h1>{'<Contact />'}</h1>\r\n            <p>Like what you see? Feel free to connect with me through any of these means or download my resume to learn even more about me and what I have to offer!</p>\r\n           <ul>\r\n               <li><a href=\"mailto:natedimock@yahoo.com\"><button><img src=\"/images/email.svg\" alt=\"\"></img>E-mail</button></a></li>\r\n               <li><a href=\"/files/Nathan Dimock Resume.pdf\" download><button><img src=\"/images/Adobe-PDF-File-Icon-01.svg\" alt=\"\"></img>Resume</button></a></li>\r\n               <li><a href=\"https://www.github.com/Flakari\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                   <button><img src=\"images/github-logo.svg\" alt=\"\"></img>Github</button>\r\n                </a></li>\r\n               <li><a href=\"https://www.linkedin.com/in/nathan-dimock/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                   <button><img src=\"images/linkedin-logo.png\" alt=\"\"></img>LinkedIn</button>\r\n                </a></li>\r\n           </ul>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Contact;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.scss';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport About from './About/About';\nimport Projects from './Projects/Projects';\nimport Contact from './Contact/Contact';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\"><Home /></Route>\n\t\t\t\t\t<Route path=\"/about\"><About /></Route>\n\t\t\t\t\t<Route path=\"/projects\"><Projects /></Route>\n\t\t\t\t\t<Route path=\"/contact\"><Contact /></Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}